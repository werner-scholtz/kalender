name: Performance Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 2 * * 1" # Weekly on Mondays

jobs:
  performance-test:
    strategy:
      matrix:
        os: [ubuntu-latest] # macos-latest, windows-latest
        include:
          - os: ubuntu-latest
            platform: linux
            test-device: linux-headless
          # - os: macos-latest
          #   platform: macos
          #   test-device: macos-desktop
          # - os: windows-latest
          #   platform: windows
          #   test-device: windows-desktop

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.0"

      - name: Enable desktop support
        run: |
          flutter config --enable-linux-desktop
          flutter config --enable-macos-desktop  
          flutter config --enable-windows-desktop

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
          sudo apt-get install -y xvfb
          # Updated package names for recent Ubuntu versions
          sudo apt-get install -y libegl1-mesa-dev libgl1-mesa-dev libgles2-mesa-dev
          sudo apt-get install -y mesa-common-dev

      - name: Install dependencies
        run: |
          cd examples/testing
          flutter pub get

      - name: Run performance tests (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd examples/testing
          xvfb-run -a flutter test integration_test/perf_test.dart -d ${{ matrix.test-device }} --reporter json > test_results.json

      - name: Run performance tests (macOS/Windows)
        if: matrix.os != 'ubuntu-latest'
        run: |
          cd examples/testing
          flutter test integration_test/perf_test.dart -d ${{ matrix.test-device }} --reporter json > test_results.json

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results-${{ matrix.platform }}-${{ github.run_number }}
          path: examples/testing/test_results.json

      - name: Upload performance JSON (if exists)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-json-${{ matrix.platform }}-${{ github.run_number }}
          path: examples/testing/performance_*.json

  consolidate-results:
    needs: performance-test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Consolidate and compare results
        run: |
          echo "# Performance Test Results by Platform" > consolidated_results.md
          echo "" >> consolidated_results.md

          for platform in linux macos windows; do
            echo "## $platform Results" >> consolidated_results.md
            if [ -f "performance-json-${platform}-${{ github.run_number }}/performance_summary.json" ]; then
              echo '```json' >> consolidated_results.md
              cat "performance-json-${platform}-${{ github.run_number }}/performance_summary.json" >> consolidated_results.md
              echo '```' >> consolidated_results.md
            else
              const results = fs.readFileSync('consolidated_results.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: results
              });
            }
            echo "## $platform Results" >> consolidated_results.md
            if [ -f "performance-json-${platform}-${{ github.run_number }}/performance_summary.json" ]; then
              echo '```json' >> consolidated_results.md
              cat "performance-json-${platform}-${{ github.run_number }}/performance_summary.json" >> consolidated_results.md
              echo '```' >> consolidated_results.md
            else
              echo "No results available for $platform" >> consolidated_results.md
            fi
            echo "" >> consolidated_results.md
          done

      - name: Upload consolidated results
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-results-${{ github.run_number }}
          path: consolidated_results.md

      - name: Comment PR with consolidated results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('consolidated_results.md')) {
              const results = fs.readFileSync('consolidated_results.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: results
              });
            }
